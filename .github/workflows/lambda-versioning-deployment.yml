name: Lambda Versioning and Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'test-1/**'
      - 'test-2/**'
      - 'test-3/**'
      - 'test-4/**'

jobs:
  detect_and_publish:
    name: Detect Changes and Publish Lambda Versions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Identify Changed Lambda Functions
        id: detect_changes
        run: |
          # Identify which Lambda functions have changed
          if [ $(git rev-list --count HEAD) -eq 1 ]; then
            CHANGED_FOLDERS=$(git diff-tree --no-commit-id --name-only -r HEAD | grep 'test-' | cut -d '/' -f1 | uniq || true)
          else
            CHANGED_FOLDERS=$(git diff --name-only HEAD~1 HEAD | grep 'test-' | cut -d '/' -f1 | uniq || true)
          fi
          echo "CHANGED_FOLDERS=$CHANGED_FOLDERS" >> $GITHUB_ENV

      - name: Debug Changed Folders
        run: echo "Changed Folders: ${{ env.CHANGED_FOLDERS }}"

      - name: Publish New Lambda Versions
        run: |
          if [ -z "${{ env.CHANGED_FOLDERS }}" ]; then
            echo "No Lambda functions changed. Skipping..."
            exit 0
          fi
          # Publish new version for each changed Lambda function
          for folder in ${{ env.CHANGED_FOLDERS }}; do
            echo "Publishing new version of Lambda in folder: $folder"
            if [ -f "$folder/function.zip" ]; then
              aws lambda update-function-code --function-name "$folder" --zip-file fileb://$folder/function.zip
              aws lambda publish-version --function-name "$folder"
            else
              echo "No function.zip found in $folder, skipping..."
            fi
          done

  deploy_lambdas:
    name: Deploy Updated Lambda Versions
    runs-on: ubuntu-latest
    needs: detect_and_publish
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Updated Lambdas
        if: ${{ env.CHANGED_FOLDERS != '' }}
        run: |
          # Update alias to point to the new Lambda version
          for folder in ${{ env.CHANGED_FOLDERS }}; do
            echo "Deploying Lambda version in folder: $folder"
            NEW_VERSION=$(aws lambda list-versions-by-function --function-name "$folder" --query 'Versions[-1].Version' --output text)
            aws lambda update-alias --function-name "$folder" --name "blue" --function-version "$NEW_VERSION"
          done

  track_lambda_versions:
    name: Track Lambda Versions
    runs-on: ubuntu-latest
    needs: detect_and_publish
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Track Lambda Versions
        if: ${{ env.CHANGED_FOLDERS != '' }}
        run: |
          # Track the current version of each changed Lambda function
          for folder in ${{ env.CHANGED_FOLDERS }}; do
            version=$(aws lambda list-versions-by-function --function-name "$folder" --query 'Versions[-1].Version' --output text)
            echo "Lambda function $folder is now at version $version"
          done
