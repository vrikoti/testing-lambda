name: Lambda Versioning and Deployment

on:
  push:
    branches:
      - main
    paths:
      - 'test-1/**'
      - 'test-2/**'
      - 'test-3/**'
      - 'test-4/**'

jobs:
  detect_and_publish:
    name: Detect Changes and Publish Lambda Versions
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Identify Changed Files
        id: changed-files
        uses: tj-actions/changed-files@v39

      - name: Get the current branch name
        id: get-branch
        run: |
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          echo "Current branch: $CURRENT_BRANCH"
          echo "::set-output name=branch::$CURRENT_BRANCH"

      - name: Filter Changed Files
        id: filter-changed-files
        run: |
          echo "${{ steps.changed-files.outputs.all_changed_files }}" | tr ' ' '\n' | grep -v -e '.gitignore' -e 'rocro.yml' | tr '\n' ' ' > filtered_files.txt
          echo "::set-output name=filtered_files::$(cat filtered_files.txt)"

      - name: Find Changed Directories
        id: find-changed-dirs
        run: |
          > updated_directories.txt
          for changed_file in $(cat filtered_files.txt); do
            mod_dir=$(dirname "$changed_file")
            updated_dir=$(echo "$mod_dir" | cut -d/ -f1)
            echo "$updated_dir" >> updated_directories.txt
          done
          echo "Below directories have been updated ... "
          cat updated_directories.txt
          echo "Below unique directories were updated ... "
          sort updated_directories.txt | uniq > unique_updated_directories.txt
          cat unique_updated_directories.txt
          echo "::set-output name=changed_dirs::$(cat unique_updated_directories.txt)"

      - name: Zip Lambda Function Code
        if: ${{ steps.find-changed-dirs.outputs.changed_dirs != '' }}
        run: |
          for folder in $(cat unique_updated_directories.txt); do
            echo "Creating zip for $folder"
            cd $folder
            zip -r function.zip ./*
            cd ..
          done

      - name: Publish New Lambda Versions
        if: ${{ steps.find-changed-dirs.outputs.changed_dirs != '' }}
        run: |
          for folder in $(cat unique_updated_directories.txt); do
            echo "Publishing new version of Lambda in folder: $folder"
            if [ -f "$folder/function.zip" ]; then
              aws lambda update-function-code --function-name "$folder" --zip-file fileb://$folder/function.zip

              # Wait for the update to complete
              while true; do
                status=$(aws lambda get-function --function-name "$folder" --query 'Configuration.LastUpdateStatus' --output text)
                if [ "$status" != "InProgress" ]; then
                  break
                fi
                echo "Waiting for update to complete for $folder..."
                sleep 5  # Wait for 5 seconds before checking again
              done

              # Publish the new version
              aws lambda publish-version --function-name "$folder"
            else
              echo "No function.zip found in $folder, skipping..."
            fi
          done

  deploy_lambdas:
    name: Deploy Updated Lambda Versions
    runs-on: ubuntu-latest
    needs: detect_and_publish
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy Updated Lambdas
        if: ${{ steps.find-changed-dirs.outputs.changed_dirs != '' }}
        run: |
          for folder in $(cat unique_updated_directories.txt); do
            echo "Deploying Lambda version in folder: $folder"
            NEW_VERSION=$(aws lambda list-versions-by-function --function-name "$folder" --query 'Versions[-1].Version' --output text)
            aws lambda update-alias --function-name "$folder" --name "blue" --function-version "$NEW_VERSION"
          done

  track_lambda_versions:
    name: Track Lambda Versions
    runs-on: ubuntu-latest
    needs: detect_and_publish
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Track Lambda Versions
        if: ${{ steps.find-changed-dirs.outputs.changed_dirs != '' }}
        run: |
          output_file="lambda_versions.txt"
          echo "Tracking Lambda versions..." > $output_file
          for folder in $(cat unique_updated_directories.txt); do
            version=$(aws lambda list-versions-by-function --function-name "$folder" --query 'Versions[-1].Version' --output text)
            echo "Lambda function $folder is now at version $version" >> $output_file
          done
          # Print the output file to the console for visibility
          cat $output_file

      - name: Upload Lambda Versions Output
        uses: actions/upload-artifact@v2
        with:
          name: lambda-versions-output
          path: lambda_versions.txt
      - name: Upload to S3
        run: |
          aws s3 cp lambda_versions.txt s3://lambda-versioning-data/lambda_versions.txt
